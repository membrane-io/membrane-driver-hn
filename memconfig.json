{
  "dependencies": {
    "http": "http:"
  },
  "expressions": {
    "item": {
      "description": "HN Item",
      "type": "url",
      "searchIn": "https://news.ycombinator.com",
      "regex": "https://news.ycombinator.com/item\\?id=[0-9]+$"
    },
    "user": {
      "description": "HN User",
      "type": "url",
      "searchIn": "https://news.ycombinator.com",
      "regex": "https://news.ycombinator.com/user\\?id=[a-zA-Z0-9-_]+$"
    }
  },
  "schema": {
    "types": [
      {
        "name": "Root",
        "description": "Root type represents the base entity of Hacker News API. It provides access to various collections and endpoints such as item and user collections, status checks, and test entities.",
        "fields": [
          {
            "name": "items",
            "type": "ItemCollection",
            "description": "Access point to the collection of Hacker News items such as stories, comments, and polls."
          },
          {
            "name": "users",
            "type": "UserCollection",
            "description": "Provides access to the user profiles and their associated content on Hacker News."
          },
          {
            "name": "status",
            "type": "String",
            "description": "Indicates the current operational status of the Hacker News API service."
          },
          {
            "name": "parse",
            "type": "List",
            "ofType": {
              "type": "Ref",
              "ofType": "Item"
            },
            "hints": {
              "hidden": true
            },
            "params": [
              {
                "name": "name",
                "type": "String"
              },
              {
                "name": "value",
                "type": "String"
              }
            ],
            "description": "Internal mechanism used for transforming and interpreting item data."
          },
          {
            "name": "stories",
            "type": "ItemCollection",
            "description": "Curated collection of the top, new, and best stories published on Hacker News."
          },
          {
            "name": "tests",
            "type": "Tests",
            "description": "Contains test entities for evaluating and ensuring the reliability of the Hacker News API endpoints."
          }
        ]
      },
      {
        "name": "ItemCollection",
        "fields": [
          {
            "name": "one",
            "type": "Item",
            "params": [
              {
                "name": "id",
                "type": "Int"
              }
            ],
            "description": "Retrieves a specific Hacker News item by its unique identifier."
          },
          {
            "name": "page",
            "type": "ItemPage",
            "params": [
              {
                "name": "page",
                "type": "Int",
                "optional": true
              },
              {
                "name": "topic",
                "type": "String",
                "optional": true
              },
              {
                "name": "pageSize",
                "type": "Int",
                "optional": true
              }
            ],
            "description": "Provides a paginated view of Hacker News items, supporting customizable topics and page sizes."
          }
        ],
        "description": "ItemCollection type is a container for Hacker News items such as posts, comments, and jobs, allowing retrieval of individual items or paginated lists."
      },
      {
        "name": "ItemPage",
        "fields": [
          {
            "name": "items",
            "type": "List",
            "ofType": "Item",
            "description": "List of Hacker News items present on the current page."
          },
          {
            "name": "next",
            "type": "Ref",
            "ofType": "ItemPage",
            "description": "Reference to the next page of Hacker News items."
          }
        ],
        "description": "ItemPage type represents a page of Hacker News items, with references to individual items and the next page of items."
      },
      {
        "name": "UserCollection",
        "fields": [
          {
            "name": "one",
            "type": "User",
            "params": [
              {
                "name": "id",
                "type": "String"
              }
            ],
            "description": "Retrieves a specific Hacker News user profile by their unique username."
          }
        ],
        "actions": [
          {
            "name": "create",
            "type": "String"
          }
        ],
        "description": "UserCollection type provides functionalities to access individual user profiles within Hacker News by their unique identifiers or to create new user profiles."
      },
      {
        "name": "Item",
        "fields": [
          {
            "name": "id",
            "type": "Int",
            "description": "The unique identifier of the Hacker News item."
          },
          {
            "name": "deleted",
            "type": "Boolean",
            "description": "Indicates whether the item has been deleted from Hacker News."
          },
          {
            "name": "type",
            "type": "String",
            "description": "Specifies the type of the item (e.g., post, comment, job)."
          },
          {
            "name": "by",
            "type": "String",
            "description": "The username of the individual who submitted the item."
          },
          {
            "name": "time",
            "type": "Int",
            "description": "The timestamp of when the item was submitted to Hacker News."
          },
          {
            "name": "text",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The text content of the item, such as a comment or story description."
          },
          {
            "name": "dead",
            "type": "Boolean",
            "description": "Reflects whether the item is no longer active or 'dead' on Hacker News."
          },
          {
            "name": "parent",
            "type": "Item",
            "description": "The parent item, typically for a comment or reply, linking to the original post or comment."
          },
          {
            "name": "kids",
            "type": "List",
            "ofType": "Item",
            "description": "A list of child items, commonly replies or comments to the main item."
          },
          {
            "name": "url",
            "type": "String",
            "description": "The URL of the original source for the item, if provided."
          },
          {
            "name": "score",
            "type": "Int",
            "description": "The net score of the item derived from upvotes minus downvotes."
          },
          {
            "name": "title",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The title of the item, commonly used for stories and job listings."
          },
          {
            "name": "descendants",
            "type": "Int",
            "description": "The count of all sub-items associated with this item, such as comments and replies."
          }
        ],
        "description": "Item type encapsulates a Hacker News item which can be a post, comment, or a job listing. It includes details like identification, ownership, score, and associated comments or children."
      },
      {
        "name": "User",
        "fields": [
          {
            "name": "id",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "The unique username of the Hacker News user."
          },
          {
            "name": "about",
            "type": "String",
            "hints": {
              "primary": true
            },
            "description": "A brief description or bio provided by the user."
          },
          {
            "name": "created",
            "type": "Int",
            "description": "The timestamp indicating when the user's account was created."
          },
          {
            "name": "karma",
            "type": "Int",
            "description": "A score reflecting the user's contributions to the Hacker News community."
          },
          {
            "name": "submitted",
            "type": "UserItemPage",
            "params": [
              {
                "name": "page",
                "type": "Int",
                "optional": true
              },
              {
                "name": "pageSize",
                "type": "Int",
                "optional": true
              }
            ],
            "description": "Paginated list of items submitted by the user, including posts and comments."
          }
        ],
        "description": "User type represents a Hacker News user profile containing personal and activity information such as identity, karma points, and content submissions."
      },
      {
        "name": "UserItemPage",
        "fields": [
          {
            "name": "items",
            "type": "List",
            "ofType": "Item",
            "description": "List of items submitted by the user on the current page."
          },
          {
            "name": "next",
            "type": "Ref",
            "ofType": "UserItemPage",
            "description": "Reference to the next page of items submitted by the user."
          }
        ],
        "description": "UserItemPage type provides a paginated view of items submitted by a Hacker News user, including navigation to subsequent pages."
      },
      {
        "name": "UserItemCollection",
        "fields": [
          {
            "name": "page",
            "type": "String",
            "description": "Enables retrieval of a paginated collection of a user's submitted items."
          },
          {
            "name": "one",
            "type": "String",
            "description": "Allows for fetching a single item from a user's collection by its identifier."
          }
        ],
        "description": "UserItemCollection type is designed to manage collections of items associated with a specific Hacker News user, such as posted stories or comments."
      },
      {
        "name": "Tests",
        "actions": [
          {
            "name": "testGetStories",
            "type": "Boolean"
          },
          {
            "name": "testGetItems",
            "type": "Boolean"
          }
        ],
        "description": "Tests type provides actions for testing the functionality of the Hacker News API endpoints, such as retrieving stories or items."
      }
    ]
  }
}